import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.gradle.api.JavaVersion
import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
	id 'java'
	id 'application'
	id 'org.jetbrains.kotlin.jvm' version '1.9.23'
	id 'org.javamodularity.moduleplugin' version '1.8.12'
	id 'org.openjfx.javafxplugin' version '0.0.13'
	id 'org.beryx.jlink' version '2.25.0'
	id 'com.github.johnrengelman.shadow' version '7.1.2'
	id 'com.gluonhq.gluonfx-gradle-plugin' version '1.0.26'
}

group = 'ru.ravel'
version = '0.4.5'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.23'
	implementation "org.fxmisc.richtext:richtextfx:0.10.9"
	implementation "net.sf.saxon:Saxon-HE:12.3"
	implementation "org.openjfx:javafx-controls:17"

	implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17"
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.17.0"
	implementation "org.ccil.cowan.tagsoup:tagsoup:1.2.1"

	implementation "org.kordamp.ikonli:ikonli-javafx:12.3.0"
	implementation "org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.0"
	implementation "org.kordamp.ikonli:ikonli-materialdesign2-pack:12.3.0"

	implementation 'org.fxmisc.richtext:richtextfx:0.11.5'

	implementation 'org.apache.commons:commons-text:1.14.0'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

java {
	// Устанавливаем совместимость Java-компиляции на версию 17
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

kotlin {
	// Используем JVM-toolchain 17 и для Kotlin
	jvmToolchain {
		languageVersion.set(JavaLanguageVersion.of(17))
	}
}

javafx {
	version = '21'
	modules = ['javafx.controls', 'javafx.fxml']
}

application {
	mainModule = 'ru.ravel.xsltsandbox'
	mainClass = 'ru.ravel.xsltsandbox.XmlXsltValidatorAppKt'
}

// Компиляция Kotlin-классов в тот же каталог, что и Java
tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		jvmTarget = '17'
	}
	destinationDirectory.set(
			tasks.named('compileJava').get().destinationDirectory
	)
}

test {
	useJUnitPlatform()
}

jlink {
	imageZip = file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
	options = [
			'--strip-debug',
			'--compress', '2',
			'--no-header-files',
			'--no-man-pages'
	]
	launcher {
		name = 'app'
	}
}

jlinkZip {
	group = 'distribution'
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from(sourceSets.main.output)
	from {
		configurations.runtimeClasspath
				.filter { it.name.endsWith('.jar') && !it.name.startsWith('javafx-') }
				.collect { zipTree(it) }
	}
	exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.EC'

	manifest {
		attributes(
				'Main-Class': 'ru.ravel.xsltsandbox.XmlXsltValidatorAppKt'
		)
	}
}

sourceSets {
	main {
		resources {
			srcDirs = ['src/main/resources', 'src/resources']
		}
	}
}

kotlin {
	sourceSets["main"].resources.srcDir("src/main/resources")
}

//tasks.named('clean', Delete) {
//	delete = delete.filter {
//		!it.toString().contains("${buildDir}/gluonfx")
//	}
//}

gluonfx {
	graalvmHome = 'C:/Program Files/Java/graalvm-jdk-24.0.1+9.1'
	javaStaticSdkVersion = '24-2'
	javafxStaticSdkVersion = '24-ea+7.1'
	target = 'host'
	mainClassName = 'ru.ravel.xsltsandbox.XmlXsltValidatorAppKt'
	verbose = true
	enableSwRendering = false
	runtimeArgs = [
			"-agentlib:native-image-agent=config-output-dir=${buildDir}/agent-output"
//			, '--auto-fallback'
	]
}

afterEvaluate {
	tasks.named('mergeClasses') {
		mustRunAfter tasks.named('compileTestKotlin')
	}
}

compileKotlin {
	kotlinOptions {
		languageVersion = "1.9"
	}
}

tasks.named("processResources", Copy) {
	doFirst {
		println "Looking for xml‑highlighting.css in resources:"
		// source — это FileTree всех ресурсов, которые будут скопированы
		source.files.findAll { it.name == "xml‑highlighting.css" }
				.each { println "  -> " + it.absolutePath }
	}
	// после отладки можно вернуть стратегию обратно на EXCLUDE или WARN
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}